Function newEntityPrototype(_hp, _name$, _player, _attack, _defence, _armory, _range, _abilities, _LOS, _anim, _speed, _size)
	debug(1, ">newEntityPrototype()") //DEBUG
	
	entityPrototypeCounter = entityPrototypeCounter + 1
	_newEntityPrototype.entityPrototype = New(entityPrototype)
	_newEntityPrototype\uid = entityPrototypeCounter
	_newEntityPrototype\hp = _hp
	_newEntityPrototype\name = _name
	_newEntityPrototype\player = _player
	_newEntityPrototype\attack = _attack
	_newEntityPrototype\defence = _defence
	_newEntityPrototype\armory = _armory
	_newEntityPrototype\range = _range
	_newEntityPrototype\abilities = _abilities
	_newEntityPrototype\LOS = _LOS
	_newEntityPrototype\anim = _anim
	_newEntityPrototype\speed = _speed
	_newEntityPrototype\size = _size
	
	debug(1, "<newEntityPrototype()") //DEBUG
	Return ConvertToInteger(_newEntityPrototype)
EndFunction

Function getEntityPrototype(_name$)
	For _entityPrototype.entityPrototype = Each entityPrototype
		If (_entityPrototype\name = _name) Then Return ConvertToInteger(_entityPrototype)
	Next _entityPrototype
	error("getEntityPrototype()", "entity "+_name+" Not found") //DEBUG
	Return False
EndFunction

Function newEntity(_prototype, _position)
'	debug(1, "> newEntity("+_prototype+","+_position+")") //DEBUG

	entityCounter = entityCounter + 1

	_prototypeType.entityPrototype = ConvertToType(_prototype)

	_newEntity.entity = New(entity)
	_newEntity\prototype = _prototype
	_newEntity\position = _position
	_newEntity\uid = entityCounter
	_newEntity\hp = _prototypeType\hp
	_newEntity\state = 0
	_newEntity\group = 0
	_newEntity\direction = 0
	_newEntity\anim = 0
	_newEntity\frame = 0
	_newEntity\lastFrameTime = GameTime
	_newEntity\attackTarget = 0
	_newEntity\actionBuffer = MakeMEMBlock(11 * 4)
	_newEntity\actionProgress = 0

	_newEntity\resource = 0
	_newEntity\resourceAmount = 0

'	debug(1, "< newEntity("+_prototype+","+_position+")") //DEBUG
	Return ConvertToInteger(_newEntity)
EndFunction

Function groupAddEntity(_group, _entity)
	debug(2, ">groupAddEntity("+_group+", "+_entity+")")
	tGroup.group = ConvertToType(_group)
	t = -1
	If (tGroup\entitiesCount < maxGroupEntities) Then 
		For i = 0 To maxGroupEntities
			p = PeekInt(tGroup\entities, i*4)
			If (p = 0 And t = -1) Then t  = i
			If (p = _entity) Then
				debug(2, "entity added To group!")
				debug(2, "<groupAddEntity("+_group+", "+_entity+")")
				Return False
			EndIf
		Next i
		If (t <> -1) Then
			PokeInt tGroup\entities, t*4, _entity
			tGroup\entitiesCount = tGroup\entitiesCount + 1 
		EndIf
	EndIf
	debug(2, "<groupAddEntity("+_group+", "+_entity+")")
EndFunction

Function groupDeleteEntity(_group, _entity)
	debug(2, ">groupDeleteEntity("+_group+", "+_entity+")")
	tGroup.group = ConvertToType(_group)
	For i = 0 To maxGroupEntities
		p = PeekInt(tGroup\entities, i*4)
		If (p = _entity) Then
			PokeInt tGroup\entities, i*4, 0
			tGroup\entitiesCount = tGroup\entitiesCount - 1 
			debug(2, "entity deleted from group!")
			debug(2, "<groupDeleteEntity("+_group+", "+_entity+")")
			Return False
		EndIf
	Next i
	debug(2, "entity Not found in group")
	debug(2, "<groupDeleteEntity("+_group+", "+_entity+")")
EndFunction

Function addGroup()
	debug(2, ">addGroup()")
	_newGroup.group = New(group)
	_newGroup\speed = 0
	_newGroup\entitiesCount = 0
	_newGroup\entities = MakeMEMBlock(maxEntites * 4)
	For i = 0 To maxGroupEntities
		PokeInt _newGroup\entities, i*4, 0
	Next i
	_newGroup\isActivated = False
	debug(2, "group added")
	debug(2, "<addGroup()")
	Return ConvertToInteger(_newGroup)
EndFunction

Function deleteGroup(_group)
	debug(2, ">deleteGroup("+_group+")")
	For tGroup.group = Each group
		_tGroup = ConvertToInteger(tGroup)
		If (_tGroup = _group) Then 
			DeleteMEMBlock(tGroup\entities)
			Delete tGroup
		EndIf
	Next tGroup
	debug(2, "<deleteGroup("+_group+")")
EndFunction

'Function getGroup(_group)
'	For tGroup.group = Each group
'		_tGroup = ConvertToInteger(_tGroup)
'		If (_tGroup = _group) Then Return _tGroup
'	Next tGroup
'	Print "aoe: ERROR - getGroup() failed - group "+_group+" Not found" //DEBUG
'	Return False
'EndFunction

Function groupEmpty(_group)
	debug(2, ">groupEmpty("+_group+")")
	tGroup.group = ConvertToType(_group)
	For i = 0 To maxGroupEntities
		PokeInt tGroup\entities, i*4, 0
	Next i
	tGroup\entitiesCount = 0
	debug(2, "<groupEmpty("+_group+")")
EndFunction

Function groupActivate(_group)
	debug(2, ">groupActivate("+_group+")")
	tGroup.group = ConvertToType(_group)
	tGroup\isActivated = True
	tGroup\speed = 999
	//todo: kaikki läpi, hitain esiin
	debug(2, "<groupActivate("+_group+")")
EndFunction

Function groupEntitiesCount(_group)
	tGroup.group = ConvertToType(_group)
	Return tGroup\entitiesCount
EndFunction
