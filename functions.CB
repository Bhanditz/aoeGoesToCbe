Function x2tx(_x)
	Return _x
End Function

Function y2ty(_y)
	Return _y
End Function


Function loadFrames(_name, _direction)
	mem = MakeMEMBlock(256)
	
	PokeByte mem, 0, TODO
	
	
	Return mem
End Function 

// ANIMAATIOT >>>>>>>>>>>>>>>

Function newAnimation(_frames, _name, _direction)
	_newAnimation.animation	= New(animation)
	_newAnimation\frames	= _frames
	_newAnimation\name		= _name
	_newAnimation\direction	= _direction

	Return ConvertToInteger(_newAnimation)
End Function

Function getAnimation(_animation, _direction)

End Function

// ANIMAATIOT <<<<<<<<<<<<<<<
// TILET >>>>>>>>>>>>>>>
Function loadTileAnimations()
	newAnimation(loadFrames("grass", 0), "grass", 0)
End Function

Global tileCounter

Function loadTilePrototypes()
	newTilePrototype("grass", True, False, getAnimation("grass", 0))
EndFunction

Function newTilePrototype(_name, _isWalkable, _isSailable, _animation)
	tileCounter = tileCounter + 1
	_newTilePrototype.tilePrototype = New(tilePrototype)
	_newTilePrototype\uid = tileCounter
	_newTilePrototype\name = _name
	_newTilePrototype\isWalkable = _isWalkable
	_newTilePrototype\isSailable = _isSailable
	_newTilePrototype\animation = _animation
	
	Return ConvertToInteger(_newTilePrototype)
EndFunction

Function getTilePrototype(_name)
	For _tilePrototype.tilePrototype = Each tilePrototype
		If (_tilePrototype\name = _name) Then Return ConvertToInteger(_tilePrototype)
	Next _tilePrototype
	Return False
EndFunction

Function newTile(_prototype)
	_newTile.tile = New(tile)
	_newTile\prototype = _prototype
	_newTile\isBlocked = False

	Return ConvertToInteger(_newTile)
End Function

// TILET <<<<<<<<<<<<<<<

Function newEntity(_prototype)
	_newEntity.entity = New(entity)
	_newEntity\prototype = _prototype

	Return ConvertToInteger(_newEntity)
End Function

Function drawWorld()
End Function

Function generateMap()
	Print "aoe: generateMap()" //DEBUG
	For x = 0 To MW
		For y = 0 To MH
			prototype = getTilePrototype("grass")
			map(x, y) = newTile(prototype)
		Next y
	Next x
End Function

Function initMap()
	Print "aoe: iniMap()" //DEBUG
	ReDim map(MW, MH)
End Function
